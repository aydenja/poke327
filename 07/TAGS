
character.h,63
# define CHARACTER_H2,20
typedef int16_t pair_t[pair_t10,99

db_parse.h,1836
# define DB_PARSE_H2,19
struct pokemon_db 4,40
  int id;5,60
  char identifier[identifier6,70
  int species_id;7,93
  int height;8,111
  int weight;9,125
  int base_experience;10,139
  int order;11,162
  int is_default;12,175
struct move_db 15,197
  int id;16,214
  char identifier[identifier17,224
  int generation_id;18,247
  int type_id;19,268
  int power;20,283
  int pp;21,296
  int accuracy;22,306
  int priority;23,322
  int target_id;24,338
  int damage_class_id;25,355
  int effect_id;26,378
  int effect_chance;27,395
  int contest_type_id;28,416
  int contest_effect_id;29,439
  int super_contest_effect_id;30,464
struct pokemon_move_db 33,499
  int pokemon_id;34,524
  int version_group_id;35,542
  int move_id;36,566
  int pokemon_move_method_id;37,581
  int level;38,611
  int order;39,624
struct pokemon_species_db 42,641
  int id;43,669
  char identifier[identifier44,679
  int generation_id;45,702
  int evolves_from_species_id;46,723
  int evolution_chain_id;47,754
  int color_id;48,780
  int shape_id;49,796
  int habitat_id;50,812
  int gender_rate;51,830
  int capture_rate;52,849
  int base_happiness;53,869
  int is_baby;54,891
  int hatch_counter;55,906
  int has_gender_differences;56,927
  int growth_rate_id;57,957
  int forms_switchable;58,979
  int is_legendary;59,1003
  int is_mythical;60,1023
  int order;61,1042
  int conquest_order;62,1055
struct experience_db 65,1081
  int growth_rate_id;66,1104
  int level;67,1126
  int experience;68,1139
struct pokemon_stats_db 71,1161
  int pokemon_id;72,1187
  int stat_id;73,1205
  int base_stat;74,1220
  int effort;75,1237
struct stats_db 78,1255
  int id;79,1273
  int damage_class_id;80,1283
  char identifier[identifier81,1306
  int is_battle_only;82,1329
  int game_index;83,1351

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

io.h,55
# define IO_H2,13
typedef int16_t pair_t[pair_t5,45

poke327.h,2410
# define POKE327_H2,18
#define malloc(10,125
# define rand_under(18,382
# define rand_range(22,525
# define UNUSED(24,599
typedef enum dim 26,630
  dim_x,27,649
  dim_y,28,658
  num_dims29,667
} dim_t;30,678
typedef int16_t pair_t[pair_t32,688
#define MAP_X 34,723
#define MAP_Y 35,753
#define MIN_TREES 36,783
#define MIN_BOULDERS 37,813
#define TREE_PROB 38,843
#define BOULDER_PROB 39,873
#define WORLD_SIZE 40,903
#define MIN_TRAINERS 41,934
#define ADD_TRAINER_PROB 42,966
#define mappair(44,997
#define mapxy(45,1054
#define heightpair(46,1089
#define heightxy(47,1152
typedef enum __attribute__ ((__packed__)) terrain_type 49,1194
  ter_boulder,50,1251
  ter_tree,51,1266
  ter_path,52,1278
  ter_mart,53,1290
  ter_center,54,1302
  ter_grass,55,1316
  ter_clearing,56,1329
  ter_mountain,57,1345
  ter_forest,58,1361
  ter_exit,59,1375
  num_terrain_types60,1387
} terrain_type_t;61,1407
typedef enum __attribute__ ((__packed__)) movement_type 64,1427
  move_hiker,65,1485
  move_rival,66,1499
  move_pace,67,1513
  move_wander,68,1526
  move_sentry,69,1541
  move_walk,70,1556
  move_pc,71,1569
  num_movement_types72,1580
} movement_type_t;73,1601
typedef enum __attribute__ ((__packed__)) character_type 75,1621
  char_pc,76,1680
  char_hiker,77,1691
  char_rival,78,1705
  char_other,79,1719
  num_character_types80,1733
} character_type_t;81,1755
class Map 85,1794
  terrain_type_t map[map87,1815
  uint8_t height[height88,1851
  Character *cmap[cmap89,1883
  heap_t turn;90,1916
  int32_t num_trainers;91,1931
  int8_t n,92,1955
  int8_t n, s,92,1955
  int8_t n, s, e,92,1955
  int8_t n, s, e, w;92,1955
class Character 96,2046
  pair_t pos;98,2073
  char symbol;99,2087
  int next_turn;100,2102
  virtual ~Character(102,2120
class Pc 105,2150
 public:public106,2180
class Npc 109,2193
  character_type_t ctype;111,2233
  movement_type_t mtype;112,2259
  int defeated;113,2284
  pair_t dir;114,2300
class World 117,2318
  Map *world[world119,2341
  pair_t cur_idx;120,2379
  Map *cur_map;cur_map121,2397
  int hiker_dist[hiker_dist124,2520
  int rival_dist[rival_dist125,2552
  Pc pc;126,2584
  int quit;127,2593
#define rand_dir(140,3003
typedef struct path 146,3126
  heap_node_t *hn;hn147,3148
  uint8_t pos[pos148,3167
  uint8_t from[from149,3185
  int32_t cost;150,3204
} path_t;151,3220
