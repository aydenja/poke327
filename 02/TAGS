
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

poke327.c,1834
#define malloc(15,244
typedef struct path 21,388
  heap_node_t *hn;hn22,410
  uint8_t pos[pos23,429
  uint8_t from[from24,447
  int32_t cost;25,466
} path_t;26,482
typedef enum dim 28,493
  dim_x,29,512
  dim_y,30,521
  num_dims31,530
} dim_t;32,541
typedef uint8_t pair_t[pair_t34,551
#define MAP_X 36,586
#define MAP_Y 37,616
#define MIN_TREES 38,646
#define MIN_BOULDERS 39,676
#define TREE_PROB 40,706
#define BOULDER_PROB 41,736
#define WORLD_DIM 42,766
#define WORLD_CEN 43,797
#define mappair(45,829
#define mapxy(46,886
#define heightpair(47,921
#define heightxy(48,984
typedef enum __attribute__ ((__packed__)) terrain_type 50,1026
  ter_debug,51,1083
  ter_boulder,52,1096
  ter_tree,53,1111
  ter_path,54,1123
  ter_mart,55,1135
  ter_center,56,1147
  ter_grass,57,1161
  ter_clearing,58,1174
  ter_mountain,59,1190
  ter_forest60,1206
} terrain_type_t;61,1219
typedef struct map 63,1238
  terrain_type_t map[map64,1259
  uint8_t height[height65,1295
  uint8_t n,66,1327
  uint8_t n, s,66,1327
  uint8_t n, s, e,66,1327
  uint8_t n, s, e, w;66,1327
} map_t;67,1349
typedef struct queue_node 69,1359
  int x,70,1387
  int x, y;70,1387
  struct queue_node *next;next71,1399
} queue_node_t;72,1426
static int32_t path_cmp(74,1443
static int32_t edge_penalty(78,1566
static void dijkstra_path(83,1694
static int build_paths(181,5480
static int gaussian[gaussian202,5786
static int smooth_height(210,5949
static void find_building_location(367,9984
static int place_pokemart(398,11471
static int place_center(412,11763
static int map_terrain(425,12060
static int place_boulders(593,16301
static int place_trees(609,16597
void get_exits(625,16885
static int new_map(662,17569
static void print_map(726,18651
int check_bounds(770,19478
int main(778,19596
